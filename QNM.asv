function [w_opt,iout]=QNM(Xtr, ytr, w0, lambda, epsG, kmax, c1, c2, alpha_max)
    w = w0;
    H = eye(length(w0));  % Initial inverse Hessian approximation
    for k = 1:kmax
        grad = gL(w, Xtr, ytr);
        if norm(grad) < epsG
            break;
        end
        d = -H * grad;  % Quasi-Newton search direction
        [alpha, iout] = uo_BLSNW32(@(w) L(w, Xtr, ytr), @(w) gL(w, Xtr, ytr), w, d, alpha_max, c1, c2, 20, 1e-6);
                        uo_BLSNW32(@(w) L(w, Xtr, ytr), @(w) gL(w, Xtr, ytr), w, -grad, alpha_max, c1, c2, kmaxBLS, epsal,ialmax);
        w_new = w + alpha * d;
        grad_new = gL(w_new, Xtr, ytr);
        
        % Update H using BFGS
        s = w_new - w;
        y = grad_new - grad;
        rho = 1 / (y' * s);
        H = (eye(length(w0)) - rho * (s * y')) * H * (eye(length(w0)) - rho * (y * s')) + rho * (s * s');
        
        w = w_new;
    end
    w_opt = w;
end